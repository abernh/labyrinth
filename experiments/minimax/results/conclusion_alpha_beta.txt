First implementation. There seems to be a bug, because minimax without heuristic differs about some results:
E.g., in the "cannot-prevent" cases, the value should always be -1
Test case big-component-d1-shift-req             resulted in actions (((1, 0), 90), (0, 3)), with total value -1645.0: 0.00, 169.00, 4.00, 0.00
Test case big-component-d2-cannot-prevent        resulted in actions (((0, 5), 0), (5, 3)), with total value -60.0: -1.00, 400.00, -4.00, 0.00
Test case difficult-d1-shift-req                 resulted in actions (((0, 3), 0), (6, 2)), with total value -815.0: 0.00, 0.00, 1.00, 1.00
Test case difficult-d2-cannot-prevent            resulted in actions (((6, 3), 0), (4, 2)), with total value 340.0: 0.00, 25.00, -5.00, 1.00
Test case difficult-d2-can-prevent               resulted in actions (((1, 6), 270), (5, 3)), with total value 34.0: 0.00, 25.00, -6.00, 0.00

Score vs. exhaustive search: ~ 100 to 80
Computer opponent only computing depth 1, no iterative deepening.

Test case big-component-d1-shift-req             best of 3: 328.28ms
Test case big-component-d2-cannot-prevent        best of 3: 14930.92ms
Test case difficult-d1-shift-req                 best of 3: 109.18ms
Test case difficult-d2-cannot-prevent            best of 3: 6753.60ms
Test case difficult-d2-can-prevent               best of 3: 17623.00ms
-> Bug was due to heuristic evaluating win of opponent less than win of self. This is an error, because then the opponent makes suboptimal moves.

Change of heuristic: value of winning same for both players, win = 1000, distance to objective now has malus if too close, and is not counted if player actually reaches the objective.
Test case big-component-d1-shift-req             resulted in actions (((1, 0), 90), (0, 3)), with total value 1800.0: 1.00, 784.00, 0.00, 1.00
Test case big-component-d2-cannot-prevent        resulted in actions (((0, 5), 0), (1, 0)), with total value -455.0: -1.00, 529.00, 0.00, 1.00
Test case difficult-d1-shift-req                 resulted in actions (((0, 3), 0), (6, 2)), with total value 1000.0: 1.00, 0.00, 0.00, 0.00
Test case difficult-d2-cannot-prevent            resulted in actions (((6, 3), 0), (4, 4)), with total value -920.0: -1.00, 64.00, 0.00, 1.00
Test case difficult-d2-can-prevent               resulted in actions (((1, 6), 270), (5, 3)), with total value -39.0: 0.00, 1.00, -8.00, 0.00

Score vs. exhaustive search: 109 to 84

Test case big-component-d1-shift-req             best of 3: 367.82ms
Test case big-component-d2-cannot-prevent        best of 3: 16556.54ms
Test case difficult-d1-shift-req                 best of 3: 110.21ms
Test case difficult-d2-cannot-prevent            best of 3: 7404.25ms
Test case difficult-d2-can-prevent               best of 3: 18947.99ms

With alpha-beta cuts. Also activating iterative deepening.
Test case big-component-d1-shift-req             resulted in actions (((1, 0), 90), (0, 3)), with total value 1800.0: 1.00, 784.00, 0.00, 1.00
Test case big-component-d2-cannot-prevent        resulted in actions (((0, 5), 0), (1, 0)), with total value -455.0: -1.00, 529.00, 0.00, 1.00
Test case difficult-d1-shift-req                 resulted in actions (((0, 3), 0), (6, 2)), with total value 1000.0: 1.00, 0.00, 0.00, 0.00
Test case difficult-d2-cannot-prevent            resulted in actions (((6, 3), 0), (4, 4)), with total value -920.0: -1.00, 64.00, 0.00, 1.00
Test case difficult-d2-can-prevent               resulted in actions (((1, 6), 270), (5, 3)), with total value -39.0: 0.00, 1.00, -8.00, 0.00

Score vs. exhaustive search: 50 to 37

Test case big-component-d1-shift-req             best of 3: 366.83ms
Test case big-component-d2-cannot-prevent        best of 3: 5366.03ms
Test case difficult-d1-shift-req                 best of 3: 107.47ms
Test case difficult-d2-cannot-prevent            best of 3: 1756.99ms
Test case difficult-d2-can-prevent               best of 3: 4204.29ms
-> Same result, but faster.
Next tries: 
- only return one location if objective can be reached
- iterative deepening should return best action if aborted
- start next iteration with last best move.
- keep track of reachable locations of previous node

only return one location:
Test case big-component-d1-shift-req             best of 3: 256.07ms
Test case big-component-d2-cannot-prevent        best of 3: 4156.02ms
Test case difficult-d1-shift-req                 best of 3: 92.33ms
Test case difficult-d2-cannot-prevent            best of 3: 1480.15ms
Test case difficult-d2-can-prevent               best of 3: 3787.47ms
Test case generated-2-d2                         best of 3: 316.90ms
Test case generated-5-d2                         best of 3: 272.48ms
Test case generated-6-d2                         best of 3: 236.26ms
Test case generated-7-d2                         best of 3: 2370.64ms
Test case generated-8-d2                         best of 3: 419.52ms
Test case big-component-0-d2                     best of 3: 841.49ms
Test case difficult-0-d2                         best of 3: 2319.03ms

Test case big-component-d1-shift-req             resulted in actions (((1, 0), 90), (0, 3)), with total value 1800.0: 1.00, 784.00, 0.00, 1.00
Test case big-component-d2-cannot-prevent        resulted in actions (((0, 5), 0), (1, 0)), with total value -455.0: -1.00, 529.00, 0.00, 1.00
Test case difficult-d1-shift-req                 resulted in actions (((0, 3), 0), (6, 2)), with total value 1000.0: 1.00, 0.00, 0.00, 0.00
Test case difficult-d2-cannot-prevent            resulted in actions (((6, 3), 0), (4, 4)), with total value -920.0: -1.00, 64.00, 0.00, 1.00
Test case difficult-d2-can-prevent               resulted in actions (((1, 6), 270), (5, 3)), with total value -39.0: 0.00, 1.00, -8.00, 0.00
Test case generated-2-d2                         resulted in actions (((3, 6), 0), (1, 4)), with total value -5.0: 0.00, 0.00, -1.00, 0.00
Test case generated-5-d2                         resulted in actions (((0, 3), 0), (6, 5)), with total value -4.0: 0.00, 0.00, -4.00, 1.00
Test case generated-6-d2                         resulted in actions (((3, 6), 0), (1, 4)), with total value -5.0: 0.00, 0.00, -1.00, 0.00
Test case generated-7-d2                         resulted in actions (((6, 5), 0), (2, 0)), with total value 16.0: 0.00, 16.00, 0.00, 0.00
Test case generated-8-d2                         resulted in actions (((1, 0), 90), (0, 5)), with total value 10.0: 0.00, -4.00, 6.00, -1.00
Test case big-component-0-d2                     resulted in actions (((0, 3), 0), (5, 6)), with total value -40.0: 0.00, -25.00, -3.00, 0.00
Test case difficult-0-d2                         resulted in actions (((6, 3), 0), (4, 2)), with total value 0.0: 0.00, 0.00, 0.00, 0.00

Killer heuristic: start next iteration with last best move of same depth.
Test case big-component-d1-shift-req             best of 3: 263.35ms
Test case big-component-d2-cannot-prevent        best of 3: 453.36ms
Test case difficult-d1-shift-req                 best of 3: 95.54ms
Test case difficult-d2-cannot-prevent            best of 3: 154.78ms
Test case difficult-d2-can-prevent               best of 3: 713.69ms
Test case generated-2-d2                         best of 3: 207.45ms
Test case generated-5-d2                         best of 3: 192.85ms
Test case generated-6-d2                         best of 3: 107.94ms
Test case generated-7-d2                         best of 3: 1122.70ms
Test case generated-8-d2                         best of 3: 396.67ms
Test case big-component-0-d2                     best of 3: 342.37ms
Test case difficult-0-d2                         best of 3: 894.38ms
-> big improvements in running time

adjusted heuristic of locations close to the objective, and distance value vs. card value
Test case big-component-d1-shift-req             best of 3: 259.49ms
Test case big-component-d2-cannot-prevent        best of 3: 466.92ms
Test case difficult-d1-shift-req                 best of 3: 106.58ms
Test case difficult-d2-cannot-prevent            best of 3: 162.79ms
Test case difficult-d2-can-prevent               best of 3: 618.20ms
Test case generated-2-d2                         best of 3: 70.06ms
Test case generated-5-d2                         best of 3: 310.06ms
Test case generated-6-d2                         best of 3: 31.13ms
Test case generated-7-d2                         best of 3: 865.48ms
Test case generated-8-d2                         best of 3: 287.20ms
Test case big-component-0-d2                     best of 3: 380.87ms
Test case difficult-0-d2                         best of 3: 634.62ms
Test case big-component-d3-reach                 best of 1: 48197.49ms
Test case generated-6-d3                         best of 1: 10477.94ms
Test case generated-5-d3                         best of 1: 34180.87ms
Test case generated-2-d3                         best of 1: 11065.80ms


Test case big-component-d1-shift-req             resulted in actions (((1, 0), 90), (0, 3)), with total value 1787.0: 1.00, 784.00, 0.00, 1.00
Test case big-component-d2-cannot-prevent        resulted in actions (((0, 5), 0), (1, 0)), with total value -468.0: -1.00, 529.00, 0.00, 1.00
Test case difficult-d1-shift-req                 resulted in actions (((0, 3), 0), (6, 2)), with total value 1000.0: 1.00, 0.00, 0.00, 0.00
Test case difficult-d2-cannot-prevent            resulted in actions (((6, 3), 0), (4, 4)), with total value -933.0: -1.00, 64.00, 0.00, 1.00
Test case difficult-d2-can-prevent               resulted in actions (((1, 6), 270), (5, 3)), with total value -17.0: 0.00, 1.00, -9.00, 0.00
Test case generated-2-d2                         resulted in actions (((3, 6), 0), (1, 4)), with total value -2.0: 0.00, 0.00, -1.00, 0.00
Test case generated-5-d2                         resulted in actions (((0, 3), 0), (6, 5)), with total value -5.0: 0.00, 0.00, -4.00, 1.00
Test case generated-6-d2                         resulted in actions (((5, 0), 0), (1, 4)), with total value 0.0: 0.00, 0.00, 0.00, 0.00
Test case generated-7-d2                         resulted in actions (((6, 5), 0), (5, 1)), with total value 17.0: 0.00, 25.00, -4.00, 0.00
Test case generated-8-d2                         resulted in actions (((1, 0), 90), (0, 5)), with total value 4.0: 0.00, -4.00, 4.00, 0.00
Test case big-component-0-d2                     resulted in actions (((0, 3), 0), (6, 5)), with total value -28.0: 0.00, -25.00, 0.00, -1.00
Test case difficult-0-d2                         resulted in actions (((5, 0), 0), (5, 3)), with total value 4.0: 0.00, 0.00, 2.00, 0.00

The improvements discussed in this file concern the python implementation of the minimax algorithm with alpha beta cuts.
This implementation is longer part of the backend.
This file is kept for documentational reasons.