openapi: 3.0.0
info:
    description: "This is the API of the Labyrinth application. You can find the project's github page at <https://github.com/j-blue-arz/labyrinth/>"
    version: "0.3.2"
    title: "Labyrinth API"
    license:
        name: "GNU AGPLv3"
        url: "https://www.gnu.org/licenses/agpl.html"
paths:
    /games/{game_id}/players:
        post:
            operationId: addPlayer
            tags:
                - "players"
            summary: "Add a new player to a game"
            description: "Adds a player to an existing game. Creates the game if it does not exist. Returns identifier of the added player.
            The automatically created game has a maze of size 7."
            parameters:
                - $ref: "#/components/parameters/gameId"
            requestBody:
                description: "An optional request body specifies the type of player. 
                    The body is required if the added player should be a bot. Without a body, a human player is added."
                required: false
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/addPlayerObject'
            responses:
                200:
                    description: "If no error occurred, the body contains the added player.
                    The identifier in this player can then be used as the path parameter `player_id` or the query parameter `p_id`."
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/player'
                ">=400":
                    $ref: "#/components/responses/errorResponse"
    /games/{game_id}/players/{player_id}:
        delete:
            tags:
                - "players"
            summary: "Removes a player from the game"
            parameters:
                - $ref: "#/components/parameters/gameId"
                - $ref: "#/components/parameters/playerPathId"
            responses:
                200:
                    description: "If no error occurred."
                ">=400":
                    $ref: "#/components/responses/errorResponse"
    /games/{game_id}/players/{player_id}/name:
        put:
            tags:
                - "players"
            summary: "Renames a player"
            parameters:
                - $ref: "#/components/parameters/gameId"
                - $ref: "#/components/parameters/playerPathId"
            requestBody:
                description: "The new name."
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/playerNameObject'
            responses:
                200:
                    description: "If no error occurred."
                ">=400":
                    $ref: "#/components/responses/errorResponse"
    /games/{game_id}/state:
        get:
            tags:
                - "games"
            summary: "Returns current game state"
            parameters:
                - $ref: "#/components/parameters/gameId"
            responses:
                200:
                    description: "If no error occurred."
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/gameState"
                ">=400":
                    $ref: "#/components/responses/errorResponse"
    /games/{game_id}:
        put:
            tags:
                - "games"
            summary: "Alters game setup"
            description: "Altering the game setup will effectively restart the game. 
            The players will stay in the game, but the scores and the pieces will be reset, 
            and a new objective will be generated."
            parameters:
                - $ref: "#/components/parameters/gameId"
            requestBody:
                description: "Currently, the only option is to change the size of the maze."
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/gameSetupObject'
    /games/{game_id}/shift:
        post:
            tags:
                - "actions"
            summary: "Performs a shift action"
            operationId: "shift"
            parameters:
                - $ref: "#/components/parameters/gameId"
                - $ref: "#/components/parameters/playerQueryId"
            requestBody:
                description: "Specifies the shift action, i.e. new location of inserted leftover, and its rotation"
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/shiftObject'
            responses:
                200:
                    description: "OK"
                ">=400":
                    $ref: "#/components/responses/errorResponse"
    /games/{game_id}/move:
        post:
            tags:
                - "actions"
            summary: "Performs a move action"
            parameters:
                - $ref: "#/components/parameters/gameId"
                - $ref: "#/components/parameters/playerQueryId"
            requestBody:
                description: "Request body specifies the move location"
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/moveObject'                
            responses:
                200:
                    description: "OK"
                ">=400":
                    $ref: "#/components/responses/errorResponse"
    /computation-methods:
        get:
            tags:
                - "players"
            summary: "Available computation methods for bots."
            operationId: "getComputationMethods"
            responses:
                200:
                    description: "A list of possible computation methods. 
                        Only these can be used as the `computationMethod` required for adding a bot with 
                        `POST /games/{game_id}/players`."
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    type: "string"
                                example: ["exhaustive-search", "alpha-beta"]
components:
    schemas:
        addPlayerObject:
            type: "object"
            properties:
                isBot:
                    type: "boolean"
                    required: false
                    default: false
                computationMethod:
                    type: "string"
                    description: "Method a bot uses to determine game actions. 
                                  The available computation methods can be fetched with `GET /computation-methods`."
                    example: "exhaustive-search"
                    required: false
                name:
                    type: "string"
                    description: "An optional name of the player, which will be shown to all other users."
                    required: false
        errorObject:
            type: "object"
            properties:
                key:
                    type: "string"
                    description: "A key for the occurred error."
                    enum:
                        - "GAME_FULL"
                        - "INVALID_ACTION"
                        - "TURN_VIOLATION"
                        - "GAME_NOT_FOUND"
                        - "PLAYER_NOT_IN_GAME"
                        - "UNKNOWN_ERROR"
                        - "INVALID_ARGUMENTS"
                userMessage:
                    type: "string"
                    description: "A human-readable english message explaining the error. This string is subject to change. Clients should not rely on its value."
        gameState:
            type: "object"
            properties:
                enabledShiftLocations:
                    type: "array"
                    description: "An array of locations on the board which is accepted by the next shift action. 
                    All locations in this array `enabledShiftLocations` field can be used for the `location` field in the request body of `POST /games/{game_id}/shift`"
                    items:
                        $ref: "#/components/schemas/boardLocation"
                maze:
                    type: "object"
                    description: "The current layout of the maze. Mazes are always quadratic, with an odd number of rows and columns."
                    properties:
                        mazeSize:
                            type: "integer"
                            description: "The odd number of rows and columns."
                        mazeCards:
                            type: "array"
                            description: "The current layout of the maze, described as an array of maze cards. 
                            The leftover maze card is the first in this array and has location null. The other maze cards are consecutive in row-first order."
                            items:
                                $ref: "#/components/schemas/mazeCard"
                nextAction:
                    type: "object"
                    description: "The player to take an action, the type of the action and the remaining time."
                    properties:
                        action:
                            type: "string"
                            enum:
                                - "PREPARE_SHIFT"
                                - "SHIFT"
                                - "PREPARE_MOVE"
                                - "MOVE"
                        playerId:
                            type: "integer"
                        remainingSeconds:
                            type: "integer"
                            description: remaining full seconds
                objectiveMazeCardId:
                    type: "integer"
                    description: "One of the identifiers of the elements of `mazeCards`, specifying the current location of the objective."
                players:
                    type: "array"
                    description: "The players currently playing in this game. The array is sorted by the piece index of a player."
                    items:
                        $ref: "#/components/schemas/player"
            example:
                enabledShiftLocations:
                    - column: 1
                      row: 0
                    - column: 3
                      row: 0
                    - column: 5
                      row: 0
                    - column: 0
                      row: 1
                    - column: 6
                      row: 1
                    - column: 0
                      row: 3
                    - column: 6
                      row: 3
                    - column: 0
                      row: 5
                    - column: 6
                      row: 5
                    - column: 1
                      row: 6
                    - column: 3
                      row: 6
                    - column: 5
                      row: 6
                maze:
                    mazeSize: 11
                    mazeCards:
                        - outPaths: NE
                          id: 11
                          location: 
                          rotation: 0
                        - outPaths: NE
                          id: 34
                          location:
                            column: 0
                            row: 0
                          rotation: 90
                        - outPaths: NS
                          id: 33
                          location:
                            column: 1
                            row: 0
                          rotation: 0
                        - outPaths: NES
                          id: 35
                          location:
                            column: 2
                            row: 0
                          rotation: 90
                        - outPaths: NE
                          id: 2
                          location:
                            column: 3
                            row: 0
                          rotation: 90
                        - outPaths: NES
                          id: 36
                          location:
                            column: 4
                            row: 0
                          rotation: 90
                        - outPaths: NS
                          id: 25
                          location:
                            column: 5
                            row: 0
                          rotation: 0
                        - outPaths: NE
                          id: 37
                          location:
                            column: 6
                            row: 0
                          rotation: 180
                        - outPaths: NS
                          id: 26
                          location:
                            column: 0
                            row: 1
                          rotation: 270
                        - outPaths: NE
                          id: 14
                          location:
                            column: 1
                            row: 1
                          rotation: 0
                        - outPaths: NS
                          id: 31
                          location:
                            column: 2
                            row: 1
                          rotation: 270
                        - outPaths: NES
                          id: 20
                          location:
                            column: 3
                            row: 1
                          rotation: 90
                        - outPaths: NE
                          id: 13
                          location:
                            column: 4
                            row: 1
                          rotation: 270
                        - outPaths: NE
                          id: 5
                          location:
                            column: 5
                            row: 1
                          rotation: 0
                        - outPaths: NS
                          id: 30
                          location:
                            column: 6
                            row: 1
                          rotation: 180
                        - outPaths: NES
                          id: 38
                          location:
                            column: 0
                            row: 2
                          rotation: 0
                        - outPaths: NES
                          id: 18
                          location:
                            column: 1
                            row: 2
                          rotation: 0
                        - outPaths: NES
                          id: 39
                          location:
                            column: 2
                            row: 2
                          rotation: 0
                        - outPaths: NE
                          id: 10
                          location:
                            column: 3
                            row: 2
                          rotation: 180
                        - outPaths: NES
                          id: 40
                          location:
                            column: 4
                            row: 2
                          rotation: 90
                        - outPaths: NS
                          id: 21
                          location:
                            column: 5
                            row: 2
                          rotation: 90
                        - outPaths: NES
                          id: 41
                          location:
                            column: 6
                            row: 2
                          rotation: 180
                        - outPaths: NES
                          id: 19
                          location:
                            column: 0
                            row: 3
                          rotation: 180
                        - outPaths: NE
                          id: 0
                          location:
                            column: 1
                            row: 3
                          rotation: 0
                        - outPaths: NS
                          id: 27
                          location:
                            column: 2
                            row: 3
                          rotation: 270
                        - outPaths: NE
                          id: 12
                          location:
                            column: 3
                            row: 3
                          rotation: 180
                        - outPaths: NE
                          id: 7
                          location:
                            column: 4
                            row: 3
                          rotation: 180
                        - outPaths: NES
                          id: 17
                          location:
                            column: 5
                            row: 3
                          rotation: 180
                        - outPaths: NS
                          id: 32
                          location:
                            column: 6
                            row: 3
                          rotation: 180
                        - outPaths: NES
                          id: 42
                          location:
                            column: 0
                            row: 4
                          rotation: 0
                        - outPaths: NES
                          id: 16
                          location:
                            column: 1
                            row: 4
                          rotation: 180
                        - outPaths: NES
                          id: 43
                          location:
                            column: 2
                            row: 4
                          rotation: 270
                        - outPaths: NE
                          id: 6
                          location:
                            column: 3
                            row: 4
                          rotation: 90
                        - outPaths: NES
                          id: 44
                          location:
                            column: 4
                            row: 4
                          rotation: 180
                        - outPaths: NES
                          id: 15
                          location:
                            column: 5
                            row: 4
                          rotation: 180
                        - outPaths: NES
                          id: 45
                          location:
                            column: 6
                            row: 4
                          rotation: 180
                        - outPaths: NS
                          id: 24
                          location:
                            column: 0
                            row: 5
                          rotation: 270
                        - outPaths: NE
                          id: 9
                          location:
                            column: 1
                            row: 5
                          rotation: 0
                        - outPaths: NE
                          id: 4
                          location:
                            column: 2
                            row: 5
                          rotation: 270
                        - outPaths: NS
                          id: 23
                          location:
                            column: 3
                            row: 5
                          rotation: 270
                        - outPaths: NS
                          id: 22
                          location:
                            column: 4
                            row: 5
                          rotation: 270
                        - outPaths: NS
                          id: 29
                          location:
                            column: 5
                            row: 5
                          rotation: 90
                        - outPaths: NE
                          id: 8
                          location:
                            column: 6
                            row: 5
                          rotation: 180
                        - outPaths: NE
                          id: 46
                          location:
                            column: 0
                            row: 6
                          rotation: 0
                        - outPaths: NS
                          id: 28
                          location:
                            column: 1
                            row: 6
                          rotation: 90
                        - outPaths: NES
                          id: 47
                          location:
                            column: 2
                            row: 6
                          rotation: 270
                        - outPaths: NE
                          id: 3
                          location:
                            column: 3
                            row: 6
                          rotation: 90
                        - outPaths: NES
                          id: 48
                          location:
                            column: 4
                            row: 6
                          rotation: 270
                        - outPaths: NE
                          id: 1
                          location:
                            column: 5
                            row: 6
                          rotation: 180
                        - outPaths: NE
                          id: 49
                          location:
                            column: 6
                            row: 6
                          rotation: 270
                nextAction:
                    action: SHIFT
                    playerId: 1
                    remainingSeconds: 17
                objectiveMazeCardId: 48
                players:
                    - id: 1
                      isBot: false
                      mazeCardId: 34
                      score: 0
        boardLocation:
            type: "object"
            description: "Specifies a location on the board. Row 0 is in the north-most row, column 0 in the west-most column of the board."
            properties:
                row:
                    type: "integer"
                    minimum: 0
                column:
                    type: "integer"
                    minimum: 0
            example:
                row: 0
                column: 1
        mazeCard:
            type: "object"
            description: "Each maze card is identified with a unique identifier. Its location is null if it is the leftover card."
            properties:
                outPaths:
                    type: string
                    description: "specifies the type of the maze card by listing its outgoing paths.
                    The string is a subsequence of 'NESW' of length at least two. Each latter stands for one
                    of the directions north, east, south, and west, respectively.
                    Either straights ('NS'), corners ('NE'), t-junctions ('NES'), or crossroads ('NESW')."
                    enum:
                        - "NE"
                        - "NES"
                        - "NESW"
                        - "NS"
                id:
                    type: integer
                    description: "identifier of the maze card"
                location:
                    $ref: "#/components/schemas/boardLocation"
                rotation:
                    $ref: "#/components/schemas/rotationType"
        rotationType:
            type: integer
            description: "the rotation of a maze card"
            minimum: 0
            maximum: 270
            multipleOf: 90
        player:
            type: "object"
            description: "Specifies a player, his type, his piece's current location and his score."
            properties:
                id:
                    type: "integer"
                    description: "A player's identifier, unique in the application. This identifier is used as path parameter `player_id` or the query parameter `p_id`."
                isBot:
                    type: "boolean"
                    default: false
                computationMethod:
                    type: "string"
                    description: "Only present if `isBot` is true. This will be one of the available computation methods, 
                                  which can be retrieved by `GET /computation-methods`."
                mazeCardId:
                    type: "integer"
                    description: "Current location of the player's piece, as an identifier of a maze card."
                score:
                    type: "integer"
                    description: "Number of reached objectives for this player in this game."
                pieceIndex:
                    type: "integer"
                    minimum: 0
                    description: "Each piece on the board is assigned an index, unique to the respective game. This index should be used e.g. for coloring the pieces, as it is guaranteed to be
                    consecutive even if players are removed and added."
                name:
                    type: "string"
                    description: "A user-provided name of the player."
        shiftObject:
            type: "object"
            properties:
                location:
                    $ref: "#/components/schemas/boardLocation"
                rotation:
                    $ref: "#/components/schemas/rotationType"
        moveObject:
            type: "object"
            properties:
                location:
                    $ref: "#/components/schemas/boardLocation"
        gameSetupObject:
            type: "object"
            properties:
                mazeSize:
                    type: integer
                    description: "The number of rows/columns in the maze. Has to be odd."
                    required: true
                    minimum: 3
                    maximum: 31
                    example: 9
        playerNameObject:
            type: "object"
            properties:
                name:
                    type: string
                    description: "The name of the player."

    parameters:
        playerQueryId:
            name: "p_id"
            in: "query"
            required: true
            description: "identifier of the requesting player"
            schema:
                type: integer
        playerPathId:
            name: "player_id"
            in: "path"
            required: true
            description: "identifier of the player resource to alter"
            schema:
                type: integer
        gameId:
            name: "game_id"
            in: "path"
            required: true
            description: "identifier of a game"
            schema:
                type: integer
    responses:
        errorResponse:
            description: "Error response. If an error occurred, a code >= 400 is returned. 
                          Clients should check the `key` field in the response object, or directly display `userMessage` field to the user."
            content:
                application/json:
                    schema:
                        $ref: '#/components/schemas/errorObject'  
